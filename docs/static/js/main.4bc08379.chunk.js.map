{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","categories","alert","type","value","onChange","target","onClick","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,qBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACE,uBAAMC,UAAU,aAAaC,SAZV,SAACC,GACpBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,GAAoB,sBAAfP,GAClCF,GAAc,SAACU,GAAD,OAAiBR,GAAjB,mBAAgCQ,OAC9CP,EAAc,KAEdQ,MAAM,yEAMR,UACE,uBACEC,KAAK,OACLC,MAAOX,EACPY,SAvBoB,SAACR,GACzBH,EAAcG,EAAES,OAAOF,QAuBnBG,QArBmB,WACvBb,EAAc,OAsBZ,6E,+BC/BAc,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UACpDH,GAFY,gEAIII,MAAMF,GAJV,cAIRG,EAJQ,gBAKSA,EAAIC,OALb,uBAKNC,EALM,EAKNA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVvB,kBAaPM,GAbO,4CAAH,sDCEAO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKhB,UAAU,2CAAf,UACE,qBAAK8B,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCFGM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0BjB,mBAAS,CACjCwB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDb2BK,CAAazB,GAAjCa,EAAd,EAAQN,KAAcY,EAAtB,EAAsBA,QAEtB,OACE,qCACE,qBAAIjC,UAAU,iDAAd,UACGc,EADH,YAGCmB,EACC,mBAAGjC,UAAU,2CAAb,qBACE,KACJ,qBAAKA,UAAU,YAAf,SACE,6BACG2B,EAAOJ,KAAI,SAACiB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,eEd5BgB,EAAS,WACb,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAOS,EAAP,KAAmBV,EAAnB,KAEA,OACE,qCACE,qHACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGU,EAAWiB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCT/B4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4bc08379.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport propTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('Add a category...');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleClickValue = () => {\n    setInputValue('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2 && inputValue !== 'Add a category...') {\n      setCategories((categories) => [inputValue, ...categories]);\n      setInputValue('');\n    } else {\n      alert(\n        `Your search parameter is too short, must be 4 letters long at least.`\n      );\n    }\n  };\n  return (\n    <form className=\"form_input\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onClick={handleClickValue}\n      />\n      <p>Please, write something and press Enter!</p>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: propTypes.func.isRequired,\n};\n","const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}}&limit=10&api_key=viF3jLwgcPjxxcG4nfxnCKa6GmhFLJaJ`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const gifs = data.map((gif) => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n\nexport { getGifs };\n","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInUp\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"category_name animate__animated animate__flash\">\n        {category} Gifs!\n      </h3>\n      {loading ? (\n        <p className=\"loading animate__animated animate__flash\">Loading</p>\n      ) : null}\n      <div className=\"card-grid\">\n        <ol>\n          {images.map((img) => (\n            <GifGridItem key={img.id} {...img} />\n          ))}\n        </ol>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state; //{data: [], loading: true}\n};\n","import { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifApp = () => {\n  const [categories, setCategories] = useState(['CyberPunk']);\n\n  return (\n    <>\n      <h2>Welcome to 🅖🅘🅕🅐🅟🅟</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => {\n          return <GifGrid key={category} category={category} />;\n        })}\n      </ol>\n    </>\n  );\n};\n\nexport { GifApp };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifApp } from './GifApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}